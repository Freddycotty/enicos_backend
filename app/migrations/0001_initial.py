# Generated by Django 5.1.6 on 2025-02-16 22:04

import app.models.managers.user
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='IdentificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Tipo de identificación', max_length=50, verbose_name='Tipo de identificación')),
                ('code', models.CharField(help_text='Codigo del tipo de identificación', max_length=50, unique=True, verbose_name='Codigo del tipo de identificación')),
            ],
            options={
                'verbose_name': 'Tipo de identificación',
                'verbose_name_plural': 'Tipos de identificaciones',
                'db_table': 'identification_types',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del método de pago', max_length=255, unique=True, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='Descripción del método de pago', verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el método de pago está activo', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Metodo de pago',
                'verbose_name_plural': 'Metodos de pago',
                'db_table': 'payment_methods',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Suppiler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del proveedor', max_length=255, verbose_name='proveedores')),
                ('email', models.EmailField(help_text='Correo electrónico del proveedor', max_length=255, verbose_name='Correo electrónico')),
                ('phone', models.CharField(help_text='Teléfono del proveedor', max_length=20, verbose_name='Teléfono')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el método de pago está activo', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'suppilers',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Username', max_length=255, unique=True, verbose_name='username')),
                ('name', models.CharField(help_text='Nombre', max_length=255, verbose_name='name')),
                ('lastname', models.CharField(help_text='Apellido', max_length=255, null=True, verbose_name='lastname')),
                ('identification', models.CharField(max_length=15, unique=True, verbose_name='identification')),
                ('phone', models.CharField(help_text='Numero de telefono', max_length=255, null=True, verbose_name='phone')),
                ('email', models.EmailField(help_text='Correo electronico', max_length=255, unique=True, verbose_name='email')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
                'ordering': ('-id',),
            },
            managers=[
                ('objects', app.models.managers.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name', max_length=255, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='Descripción detallada de la categoría', verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si la categoría está activa', verbose_name='Activa')),
                ('parent_id', models.ForeignKey(help_text='Categoría superior en la jerarquía', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='app.category', verbose_name='Categoría padre')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'db_table': 'categories',
                'ordering': ('name',),
                'unique_together': {('name', 'parent_id')},
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del cliente', max_length=255, verbose_name='name')),
                ('lastname', models.CharField(help_text='Apellido del cliente', max_length=255, verbose_name='name')),
                ('identification', models.CharField(max_length=15, unique=True, verbose_name='identification')),
                ('address', models.CharField(help_text='Direccion', max_length=255, null=True, verbose_name='address')),
                ('phone', models.CharField(help_text='Numero de telefono', max_length=255, null=True, verbose_name='phone')),
                ('email', models.EmailField(help_text='Correo electronico', max_length=255, unique=True, verbose_name='email')),
                ('is_active', models.BooleanField(default=True)),
                ('identification_type', models.ForeignKey(help_text='Tipo de identificacion', on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='app.identificationtype', verbose_name='identification type')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
                'db_table': 'clients',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del producto', max_length=255, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, help_text='Descripción detallada del producto', verbose_name='Descripción')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='app.category', verbose_name='Categoría')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='app.suppiler', verbose_name='Proveedor')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, help_text='Precio del producto', max_digits=10, verbose_name='Precio')),
                ('cost', models.DecimalField(decimal_places=2, help_text='Costo del producto', max_digits=10, verbose_name='Costo')),
                ('product_id', models.ForeignKey(help_text='Producto asociado a este valor', on_delete=django.db.models.deletion.CASCADE, to='app.product', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Valor del Producto',
                'verbose_name_plural': 'Valores de Productos',
                'db_table': 'product_values',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(help_text='Cantidad de productos', verbose_name='Cantidad')),
                ('status', models.CharField(choices=[('P', 'Pendiente'), ('C', 'Completado'), ('X', 'Cancelado')], help_text='Estado de la transacción', max_length=1, verbose_name='Estado')),
                ('transaction_type', models.CharField(choices=[('IN', 'Entrada'), ('OUT', 'Salida')], help_text='Tipo de transacción (Entrada/Salida)', max_length=3, verbose_name='Tipo de Transacción')),
                ('transaction_date', models.DateTimeField(auto_now_add=True, help_text='Fecha de la transacción', verbose_name='Fecha de Transacción')),
                ('transaction_reference', models.CharField(help_text='Referencia o número de la transacción', max_length=255, verbose_name='Referencia de Transacción')),
                ('user', models.ForeignKey(help_text='Usuario que realizó la transacción', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('product_value', models.ForeignKey(help_text='Valor del producto relacionado', on_delete=django.db.models.deletion.CASCADE, to='app.productvalue', verbose_name='Valor del Producto')),
            ],
            options={
                'verbose_name': 'Inventario',
                'verbose_name_plural': 'Inventarios',
                'db_table': 'inventory',
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='Fecha de la venta', verbose_name='Fecha')),
                ('total', models.DecimalField(decimal_places=2, help_text='Monto total de la venta', max_digits=10, verbose_name='Total')),
                ('client', models.ForeignKey(help_text='Cliente asociado a la venta', on_delete=django.db.models.deletion.CASCADE, to='app.client', verbose_name='Cliente')),
                ('payment_method', models.ForeignKey(help_text='Método de pago utilizado', on_delete=django.db.models.deletion.CASCADE, to='app.paymentmethod', verbose_name='Método de pago')),
                ('seller', models.ForeignKey(help_text='Usuario que realizó la venta', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'db_table': 'sales',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='SaleDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Cantidad de productos vendidos', verbose_name='Cantidad')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Precio unitario del producto', max_digits=10, verbose_name='Precio Unitario')),
                ('product_value_id', models.ForeignKey(help_text='Valor del producto en el momento de la venta', on_delete=django.db.models.deletion.CASCADE, to='app.productvalue', verbose_name='Valor del Producto')),
                ('sale_id', models.ForeignKey(help_text='Venta asociada', on_delete=django.db.models.deletion.CASCADE, to='app.sales', verbose_name='Venta')),
            ],
            options={
                'verbose_name': 'Detalle de Venta',
                'verbose_name_plural': 'Detalles de Venta',
                'db_table': 'sale_details',
            },
        ),
    ]
